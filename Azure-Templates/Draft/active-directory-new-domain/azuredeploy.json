{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "fsadmin",
            "allowedValues": [
                "fsadmin"
            ],
            "metadata": {
                "description": "The name of the administrator account of the new VM and domain - fixed value"
            }            
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Password100!",
            "allowedValues": [
                "Password100!"
            ],
            "metadata": {
                "description": "The password for the administrator account of the new VM and domain - fixed value"
            } 
        },
        "domainName": {
            "type": "string",
            "allowedValues": [
                "fslogix.local"
            ],
            "defaultValue": "fslogix.local",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created - fixed value!"
            }            
        }      
    },
    "variables": {
        "virtualNetworkName": "fsxVNET",
        "virtualNetworkAddressRange": "10.0.0.0/16",
        "LBFE": "FSX-DC-01LBFE",
        "LBBE": "FSX-DC-01LBBE",
        "RDPNAT": "fsx-dc-01RDP",
        "NicName": "fsx-dc-01Nic",
        "NicIPAddress": "10.0.0.4",
        "VMName": "fsx-dc-01",
        "SubnetName": "fsxSubnet",
        "SubnetAddressPrefix": "10.0.0.0/24",
        "publicIPAddressName": "fsx-dc-01-PublicIP",
        "AvailabilitySetName": "fsx-dc-01-AvailabiltySet",
        "LBName": "fsx-dc-01-LoadBalancer",
        "_artifactsLocation": "https://raw.githubusercontent.com/FSLogix/Storage.Testing/master/Azure-Templates/Draft/active-directory-new-domain",
        "_artifactsLocationSasToken":"",
        "scriptFileName": "DomainControllerConfig.ps1",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2016-03-30",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat( variables('VMName'), uniqueString(resourceGroup().id) )]"
                }
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[variables('location')]",
            "name": "[variables('AvailabilitySetName')]",
            "properties": {
                "PlatformUpdateDomainCount": 20,
                "PlatformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },        
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('LBName')]",
            "apiVersion": "2016-03-30",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('LBFE')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('LBBE')]"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('RDPNAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('LBName'), variables('LBFE'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('NicName')]",
            "apiVersion": "2016-03-30",
            "location": "[variables('location')]",
            "dependsOn": [                
                "[resourceId('Microsoft.Network/loadBalancers', variables('LBName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('NicIPAddress')]",
                            "subnet": {
                                "id": "[concat(resourceId(resourceGroup().id, '/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/',variables('subnetName')))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('LBName'), variables('LBBE'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('LBName'), variables('RDPNAT'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('VMName')]",
            "apiVersion": "2017-03-30",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('LBName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetName'))]"
                },
                "osProfile": {
                    "computerName": "[variables('VMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('VMName'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('VMName'), '_DataDisk')]",
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": 20,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "CreateADForest",
                    "apiVersion": "2017-03-30",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('_artifactsLocation'), '/DSC/CreateADPDC.zip', variables('_artifactsLocationSasToken'))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "CustomScriptExtension",
                    "apiVersion": "2017-03-30",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('VMName'), 'CreateADForest')]",
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('VMName'))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.8",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "[concat(variables('_artifactsLocation'), '/', variables('ScriptFileName'), variables('_artifactsLocationSasToken'))]"
                        ],
                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFileName'))]"
                      }
                    }
                }   
            ]
        },                
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateVNetDNS",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('VMName'), 'CreateADForest')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('_artifactsLocation'), '/nestedtemplates/vnet-with-dns-server.json', variables('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[variables('SubnetName')]"
                    },
                    "subnetRange": {
                        "value": "[variables('SubnetAddressPrefix')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[variables('NicIPAddress')]"
                        ]
                    }
                }
            }
        }        
    ]
}
